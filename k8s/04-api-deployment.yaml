apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastfood-api
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0  # Manter pelo menos 1 pod ativo sempre
      maxSurge: 1        # Permitir apenas 1 pod extra durante update
  selector:
    matchLabels:
      app: fastfood-api
  template:
    metadata:
      annotations:
        deployment.kubernetes.io/restart: "$(date +%s)"  # Force pod recreation
      labels:
        app: fastfood-api
        tier: backend
        component: api
        version: v1.0
    spec:
      containers:
      - name: fastfood-api
        image: ${ECR_URI}:${IMAGE_TAG}
        imagePullPolicy: Always
        command: ["node", "dist/index.js"]  # Skip wait-for.sh, use only node
        ports:
        - containerPort: 3000
        env:
        - name: DATABASE_URL
          value: "mysql://admin:admin123@${RDS_ENDPOINT}/fastfood?allowPublicKeyRetrieval=true"
        envFrom:
        - configMapRef:
            name: fastfood-config
        - secretRef:
            name: fastfood-secrets
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        readinessProbe:
          httpGet:
            path: /docs  # Swagger sempre funciona
            port: 3000
          initialDelaySeconds: 60  # Aumentado para dar mais tempo para a app inicializar
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5  # Mais tolerante a falhas temporárias
        livenessProbe:
          httpGet:
            path: /docs  # Swagger sempre funciona
            port: 3000
          initialDelaySeconds: 120  # Muito tempo para primeira verificação
          periodSeconds: 30
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 30