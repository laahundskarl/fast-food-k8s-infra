name: 'Infrastructure - Deploy Kubernetes'

on:
  push:
    branches: [modulo_3]
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform-apply.yml'
  repository_dispatch:
    types: [database-ready]

env:
  TF_VERSION: '1.5.0'

jobs:
  terraform-apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-east-1

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan -input=false

    - name: Terraform Apply
      run: terraform apply -auto-approve -input=false

    - name: Get ECR URI
      id: ecr_uri
      run: |
        echo "ecr_uri=$(terraform output -raw ecr_repository_url)" >> $GITHUB_OUTPUT

    - name: Get Cluster Name
      id: cluster_name
      run: |
        echo "cluster_name=$(terraform output -raw cluster_name)" >> $GITHUB_OUTPUT

    - name: Notify Success
      if: success()
      run: |
        echo "âœ… Kubernetes infrastructure deployed successfully!"
        echo "ECR URI: ${{ steps.ecr_uri.outputs.ecr_uri }}"
        echo "Cluster: ${{ steps.cluster_name.outputs.cluster_name }}"

    - name: Trigger Application Build
      if: success()
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.REPO_ACCESS_TOKEN }}
        script: |
          github.rest.repos.createDispatchEvent({
            owner: 'laahundskarl',
            repo: 'fast-food',
            event_type: 'infrastructure-ready',
            client_payload: {
              ecr_uri: '${{ steps.ecr_uri.outputs.ecr_uri }}',
              cluster_name: '${{ steps.cluster_name.outputs.cluster_name }}',
              trigger_source: 'k8s-infrastructure'
            }
          })
